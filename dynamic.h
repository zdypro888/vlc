#ifndef DYNAMIC_H
#define DYNAMIC_H 1

#ifdef __cplusplus
extern "C"
{
#endif

#include <vlc/vlc.h>

    void dynamic_libvlc_video_set_crop_window(libvlc_media_player_t *mp, unsigned x, unsigned y, unsigned width, unsigned height);
    void dynamic_libvlc_media_list_retain(libvlc_media_list_t *p_ml);
    void dynamic_libvlc_audio_set_volume_callback(libvlc_media_player_t *mp, libvlc_audio_set_volume_cb set_volume);
    char *dynamic_libvlc_audio_equalizer_get_preset_name(unsigned u_index);
    int dynamic_libvlc_media_player_set_position(libvlc_media_player_t *p_mi, float f_pos, bool b_fast);
    int dynamic_libvlc_media_player_get_chapter(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_audio_toggle_mute(libvlc_media_player_t *p_mi);
    libvlc_media_track_t *dynamic_libvlc_media_track_hold(libvlc_media_track_t *mt);
    void dynamic_libvlc_picture_release(libvlc_picture_t *pic);
    void dynamic_libvlc_video_set_crop_ratio(libvlc_media_player_t *mp, unsigned num, unsigned den);
    void dynamic_libvlc_media_player_select_tracks(libvlc_media_player_t *p_mi, libvlc_track_type_t type, libvlc_media_track_t **tracks, size_t track_count);
    void dynamic_libvlc_video_set_aspect_ratio(libvlc_media_player_t *p_mi, char *psz_aspect);
    void dynamic_libvlc_media_list_release(libvlc_media_list_t *p_ml);
    libvlc_time_t dynamic_libvlc_media_get_duration(libvlc_media_t *p_md);
    libvlc_media_t *dynamic_libvlc_media_list_item_at_index(libvlc_media_list_t *p_ml, int i_pos);
    void dynamic_libvlc_set_exit_handler(libvlc_instance_t *p_instance, void (*cb)(void *), void *opaque);
    void dynamic_libvlc_free(void *ptr);
    void dynamic_libvlc_media_player_set_hwnd(libvlc_media_player_t *p_mi, void *drawable);
    void dynamic_libvlc_media_parse_stop(libvlc_media_t *p_md);
    int dynamic_libvlc_media_player_set_renderer(libvlc_media_player_t *p_mi, libvlc_renderer_item_t *p_item);
    int dynamic_libvlc_media_list_player_play_item(libvlc_media_list_player_t *p_mlp, libvlc_media_t *p_md);
    int dynamic_libvlc_dialog_post_action(libvlc_dialog_id *p_id, int i_action);
    int dynamic_libvlc_media_player_get_full_title_descriptions(libvlc_media_player_t *p_mi, libvlc_title_description_t ***titles);
    int dynamic_libvlc_media_player_stop_async(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_player_programlist_delete(libvlc_player_programlist_t *list);
    unsigned dynamic_libvlc_audio_equalizer_get_band_count(void);
    void dynamic_libvlc_video_set_adjust_int(libvlc_media_player_t *p_mi, unsigned option, int value);
    int dynamic_libvlc_audio_get_track(libvlc_media_player_t *p_mi);
    unsigned dynamic_libvlc_audio_equalizer_get_preset_count(void);
    bool dynamic_libvlc_media_get_stats(libvlc_media_t *p_md, libvlc_media_stats_t *p_stats);
    void dynamic_libvlc_media_set_user_data(libvlc_media_t *p_md, void *p_new_user_data);
    void dynamic_libvlc_media_player_unselect_track_type(libvlc_media_player_t *p_mi, libvlc_track_type_t type);
    void dynamic_libvlc_media_list_player_set_playback_mode(libvlc_media_list_player_t *p_mlp, libvlc_playback_mode_t e_mode);
    int dynamic_libvlc_audio_get_channel(libvlc_media_player_t *p_mi);
    bool dynamic_libvlc_media_player_can_pause(libvlc_media_player_t *p_mi);
    libvlc_module_description_t *dynamic_libvlc_audio_filter_list_get(libvlc_instance_t *p_instance);
    char *dynamic_libvlc_renderer_item_name(libvlc_renderer_item_t *p_item);
    int dynamic_libvlc_audio_set_volume(libvlc_media_player_t *p_mi, int i_volume);
    libvlc_time_t dynamic_libvlc_media_player_get_length(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_list_player_set_media_list(libvlc_media_list_player_t *p_mlp, libvlc_media_list_t *p_mlist);
    long dynamic_libvlc_media_player_get_xwindow(libvlc_media_player_t *p_mi);
    float dynamic_libvlc_audio_equalizer_get_preamp(libvlc_equalizer_t *p_equalizer);
    bool dynamic_libvlc_media_is_parsed(libvlc_media_t *p_md);
    float dynamic_libvlc_video_get_adjust_float(libvlc_media_player_t *p_mi, unsigned option);
    size_t dynamic_libvlc_player_programlist_count(libvlc_player_programlist_t *list);
    void dynamic_libvlc_media_thumbnail_request_destroy(libvlc_media_thumbnail_request_t *p_req);
    void dynamic_libvlc_media_player_select_track(libvlc_media_player_t *p_mi, libvlc_media_track_t *track);
    int dynamic_libvlc_video_set_spu_delay(libvlc_media_player_t *p_mi, int64_t i_delay);
    void dynamic_libvlc_media_add_option(libvlc_media_t *p_md, char *psz_options);
    char *dynamic_libvlc_get_compiler(void);
    libvlc_media_t *dynamic_libvlc_media_duplicate(libvlc_media_t *p_md);
    void dynamic_libvlc_video_set_adjust_float(libvlc_media_player_t *p_mi, unsigned option, float value);
    int dynamic_libvlc_media_player_get_title_count(libvlc_media_player_t *p_mi);
    libvlc_media_t *dynamic_libvlc_media_new_fd(libvlc_instance_t *p_instance, int fd);
    char *dynamic_libvlc_renderer_item_type(libvlc_renderer_item_t *p_item);
    libvlc_player_programlist_t *dynamic_libvlc_media_player_get_programlist(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_media_list_count(libvlc_media_list_t *p_ml);
    size_t dynamic_libvlc_media_discoverer_list_get(libvlc_instance_t *p_inst, libvlc_media_discoverer_category_t i_cat, libvlc_media_discoverer_description_t ***ppp_services);
    int dynamic_libvlc_media_player_set_role(libvlc_media_player_t *p_mi, unsigned role);
    int dynamic_libvlc_media_discoverer_start(libvlc_media_discoverer_t *p_mdis);
    int64_t dynamic_libvlc_video_get_spu_delay(libvlc_media_player_t *p_mi);
    void *dynamic_libvlc_media_get_user_data(libvlc_media_t *p_md);
    int64_t dynamic_libvlc_audio_get_delay(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_module_description_list_release(libvlc_module_description_t *p_list);
    int dynamic_libvlc_video_update_viewpoint(libvlc_media_player_t *p_mi, libvlc_video_viewpoint_t *p_viewpoint, bool b_absolute);
    libvlc_track_description_t *dynamic_libvlc_video_get_spu_description(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_player_set_title(libvlc_media_player_t *p_mi, int i_title);
    int dynamic_libvlc_video_set_spu(libvlc_media_player_t *p_mi, int i_spu);
    libvlc_picture_type_t dynamic_libvlc_picture_type(libvlc_picture_t *pic);
    int dynamic_libvlc_audio_output_set(libvlc_media_player_t *p_mi, char *psz_name);
    libvlc_equalizer_t *dynamic_libvlc_audio_equalizer_new_from_preset(unsigned u_index);
    int dynamic_libvlc_audio_set_track(libvlc_media_player_t *p_mi, int i_track);
    unsigned dynamic_libvlc_media_player_has_vout(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_release(libvlc_media_t *p_md);
    void dynamic_libvlc_player_program_delete(libvlc_player_program_t *program);
    void dynamic_libvlc_audio_set_callbacks(libvlc_media_player_t *mp, libvlc_audio_play_cb play, libvlc_audio_pause_cb pause, libvlc_audio_resume_cb resume, libvlc_audio_flush_cb flush, libvlc_audio_drain_cb drain, void *opaque);
    void dynamic_libvlc_audio_set_format(libvlc_media_player_t *mp, char *format, unsigned rate, unsigned channels);
    void dynamic_libvlc_media_player_select_program_id(libvlc_media_player_t *p_mi, int program_id);
    void dynamic_libvlc_media_tracks_release(libvlc_media_track_t **p_tracks, unsigned i_count);
    float dynamic_libvlc_audio_equalizer_get_amp_at_index(libvlc_equalizer_t *p_equalizer, unsigned u_band);
    void dynamic_libvlc_media_track_release(libvlc_media_track_t *track);
    bool dynamic_libvlc_media_player_is_playing(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_title_descriptions_release(libvlc_title_description_t **p_titles, unsigned i_count);
    bool dynamic_libvlc_media_list_is_readonly(libvlc_media_list_t *p_ml);
    void dynamic_libvlc_video_set_spu_text_scale(libvlc_media_player_t *p_mi, float f_scale);
    int dynamic_libvlc_media_player_add_slave(libvlc_media_player_t *p_mi, libvlc_media_slave_type_t i_type, char *psz_uri, bool b_select);
    void dynamic_libvlc_log_get_context(libvlc_log_t *ctx, char **module, char **file, unsigned *line);
    void dynamic_libvlc_media_player_release(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_video_set_logo_string(libvlc_media_player_t *p_mi, unsigned option, char *psz_value);
    float dynamic_libvlc_video_get_spu_text_scale(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_list_player_retain(libvlc_media_list_player_t *p_mlp);
    void dynamic_libvlc_playlist_play(libvlc_instance_t *p_instance);
    void dynamic_libvlc_media_list_player_pause(libvlc_media_list_player_t *p_mlp);
    int dynamic_libvlc_media_player_set_equalizer(libvlc_media_player_t *p_mi, libvlc_equalizer_t *p_equalizer);
    int dynamic_libvlc_media_list_player_play_item_at_index(libvlc_media_list_player_t *p_mlp, int i_index);
    size_t dynamic_libvlc_media_tracklist_count(libvlc_media_tracklist_t *list);
    void dynamic_libvlc_video_set_callbacks(libvlc_media_player_t *mp, libvlc_video_lock_cb lock, libvlc_video_unlock_cb unlock, libvlc_video_display_cb display, void *opaque);
    int dynamic_libvlc_video_get_teletext(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_event_attach(libvlc_event_manager_t *p_event_manager, libvlc_event_type_t i_event_type, libvlc_callback_t f_callback, void *user_data);
    size_t dynamic_libvlc_renderer_discoverer_list_get(libvlc_instance_t *p_inst, libvlc_rd_description_t ***ppp_services);
    void dynamic_libvlc_media_player_set_pause(libvlc_media_player_t *mp, int do_pause);
    void dynamic_libvlc_media_list_player_stop_async(libvlc_media_list_player_t *p_mlp);
    libvlc_video_viewpoint_t *dynamic_libvlc_video_new_viewpoint(void);
    bool dynamic_libvlc_video_set_output_callbacks(libvlc_media_player_t *mp, libvlc_video_engine_t engine, libvlc_video_output_setup_cb setup_cb, libvlc_video_output_cleanup_cb cleanup_cb, libvlc_video_output_set_resize_cb resize_cb, libvlc_video_update_output_cb update_output_cb, libvlc_video_swap_cb swap_cb, libvlc_video_makeCurrent_cb makeCurrent_cb, libvlc_video_getProcAddress_cb getProcAddress_cb, libvlc_video_frameMetadata_cb metadata_cb, libvlc_video_output_select_plane_cb select_plane_cb, void *opaque);
    libvlc_media_t *dynamic_libvlc_media_new_path(libvlc_instance_t *p_instance, char *path);
    void dynamic_libvlc_media_player_select_tracks_by_ids(libvlc_media_player_t *p_mi, libvlc_track_type_t type, char *psz_ids);
    void dynamic_libvlc_media_add_option_flag(libvlc_media_t *p_md, char *psz_options, unsigned i_flags);
    void dynamic_libvlc_media_player_set_xwindow(libvlc_media_player_t *p_mi, long drawable);
    int dynamic_libvlc_audio_set_channel(libvlc_media_player_t *p_mi, int channel);
    int dynamic_libvlc_media_player_get_role(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_media_list_add_media(libvlc_media_list_t *p_ml, libvlc_media_t *p_md);
    void dynamic_libvlc_media_list_lock(libvlc_media_list_t *p_ml);
    void dynamic_libvlc_media_slaves_clear(libvlc_media_t *p_md);
    int dynamic_libvlc_media_player_get_chapter_count_for_title(libvlc_media_player_t *p_mi, int i_title);
    void dynamic_libvlc_log_unset(libvlc_instance_t *p_instance);
    int dynamic_libvlc_video_get_track(libvlc_media_player_t *p_mi);
    int64_t dynamic_libvlc_clock(void);
    int dynamic_libvlc_renderer_discoverer_start(libvlc_renderer_discoverer_t *p_rd);
    int dynamic_libvlc_video_get_spu(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_set_user_agent(libvlc_instance_t *p_instance, char *name, char *http);
    void dynamic_libvlc_log_set_file(libvlc_instance_t *p_instance, FILE *stream);
    void dynamic_libvlc_media_tracklist_delete(libvlc_media_tracklist_t *list);
    void dynamic_libvlc_media_discoverer_stop(libvlc_media_discoverer_t *p_mdis);
    void dynamic_libvlc_video_set_mouse_input(libvlc_media_player_t *p_mi, unsigned on);
    libvlc_event_manager_t *dynamic_libvlc_media_list_event_manager(libvlc_media_list_t *p_ml);
    void dynamic_libvlc_log_get_object(libvlc_log_t *ctx, char **name, char **header, uintptr_t *id);
    libvlc_event_manager_t *dynamic_libvlc_media_event_manager(libvlc_media_t *p_md);
    libvlc_media_parsed_status_t dynamic_libvlc_media_get_parsed_status(libvlc_media_t *p_md);
    int dynamic_libvlc_video_get_cursor(libvlc_media_player_t *p_mi, unsigned num, int *px, int *py);
    char *dynamic_libvlc_video_get_aspect_ratio(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_set_meta(libvlc_media_t *p_md, libvlc_meta_t e_meta, char *psz_value);
    float dynamic_libvlc_media_player_get_position(libvlc_media_player_t *p_mi);
    libvlc_media_list_t *dynamic_libvlc_media_list_new(void);
    void dynamic_libvlc_toggle_fullscreen(libvlc_media_player_t *p_mi);
    libvlc_module_description_t *dynamic_libvlc_video_filter_list_get(libvlc_instance_t *p_instance);
    char *dynamic_libvlc_vprinterr(char *fmt, void *ap);
    void dynamic_libvlc_media_player_navigate(libvlc_media_player_t *p_mi, unsigned navigate);
    int dynamic_libvlc_dialog_post_login(libvlc_dialog_id *p_id, char *psz_username, char *psz_password, bool b_store);
    void dynamic_libvlc_audio_equalizer_release(libvlc_equalizer_t *p_equalizer);
    void dynamic_libvlc_video_set_key_input(libvlc_media_player_t *p_mi, unsigned on);
    void dynamic_libvlc_video_set_scale(libvlc_media_player_t *p_mi, float f_factor);
    void dynamic_libvlc_set_fullscreen(libvlc_media_player_t *p_mi, bool b_fullscreen);
    float dynamic_libvlc_video_get_scale(libvlc_media_player_t *p_mi);
    libvlc_event_manager_t *dynamic_libvlc_media_list_player_event_manager(libvlc_media_list_player_t *p_mlp);
    bool dynamic_libvlc_media_list_player_is_playing(libvlc_media_list_player_t *p_mlp);
    bool dynamic_libvlc_media_player_program_scrambled(libvlc_media_player_t *p_mi);
    libvlc_audio_output_device_t *dynamic_libvlc_audio_output_device_list_get(libvlc_instance_t *p_instance, char *aout);
    float dynamic_libvlc_media_player_get_rate(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_video_take_snapshot(libvlc_media_player_t *p_mi, unsigned num, char *psz_filepath, unsigned i_width, unsigned i_height);
    int dynamic_libvlc_media_list_index_of_item(libvlc_media_list_t *p_ml, libvlc_media_t *p_md);
    int dynamic_libvlc_video_set_track(libvlc_media_player_t *p_mi, int i_track);
    char *dynamic_libvlc_renderer_item_icon_uri(libvlc_renderer_item_t *p_item);
    size_t dynamic_libvlc_picture_list_count(libvlc_picture_list_t *list);
    int dynamic_libvlc_media_player_set_time(libvlc_media_player_t *p_mi, libvlc_time_t i_time, bool b_fast);
    void dynamic_libvlc_audio_output_device_list_release(libvlc_audio_output_device_t *p_list);
    void *dynamic_libvlc_media_player_get_hwnd(libvlc_media_player_t *p_mi);
    bool dynamic_libvlc_media_player_is_seekable(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_video_set_teletext(libvlc_media_player_t *p_mi, int i_page);
    void dynamic_libvlc_video_set_marquee_int(libvlc_media_player_t *p_mi, unsigned option, int i_val);
    char *dynamic_libvlc_audio_output_device_get(libvlc_media_player_t *mp);
    libvlc_media_player_t *dynamic_libvlc_media_list_player_get_media_player(libvlc_media_list_player_t *p_mlp);
    int dynamic_libvlc_video_get_adjust_int(libvlc_media_player_t *p_mi, unsigned option);
    libvlc_media_track_t *dynamic_libvlc_media_player_get_track_from_id(libvlc_media_player_t *p_mi, char *psz_id);
    int dynamic_libvlc_audio_equalizer_set_preamp(libvlc_equalizer_t *p_equalizer, float f_preamp);
    void dynamic_libvlc_retain(libvlc_instance_t *p_instance);
    libvlc_media_tracklist_t *dynamic_libvlc_media_get_tracklist(libvlc_media_t *p_md, libvlc_track_type_t type);
    void dynamic_libvlc_chapter_descriptions_release(libvlc_chapter_description_t **p_chapters, unsigned i_count);
    int dynamic_libvlc_video_get_spu_count(libvlc_media_player_t *p_mi);
    libvlc_equalizer_t *dynamic_libvlc_audio_equalizer_new(void);
    void dynamic_libvlc_picture_list_destroy(libvlc_picture_list_t *list);
    libvlc_media_list_t *dynamic_libvlc_media_discoverer_media_list(libvlc_media_discoverer_t *p_mdis);
    void dynamic_libvlc_media_discoverer_list_release(libvlc_media_discoverer_description_t **pp_services, size_t i_count);
    void dynamic_libvlc_audio_set_mute(libvlc_media_player_t *p_mi, int status);
    int dynamic_libvlc_audio_equalizer_set_amp_at_index(libvlc_equalizer_t *p_equalizer, float f_amp, unsigned u_band);
    libvlc_state_t dynamic_libvlc_media_player_get_state(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_audio_get_track_count(libvlc_media_player_t *p_mi);
    void *dynamic_libvlc_media_player_get_nsobject(libvlc_media_player_t *p_mi);
    libvlc_media_track_t *dynamic_libvlc_media_player_get_selected_track(libvlc_media_player_t *p_mi, libvlc_track_type_t type);
    libvlc_media_tracklist_t *dynamic_libvlc_media_player_get_tracklist(libvlc_media_player_t *p_mi, libvlc_track_type_t type);
    void dynamic_libvlc_video_set_logo_int(libvlc_media_player_t *p_mi, unsigned option, int value);
    void dynamic_libvlc_renderer_discoverer_stop(libvlc_renderer_discoverer_t *p_rd);
    void dynamic_libvlc_media_parse(libvlc_media_t *p_md);
    libvlc_instance_t *dynamic_libvlc_new(int argc, char **argv);
    libvlc_state_t dynamic_libvlc_media_list_player_get_state(libvlc_media_list_player_t *p_mlp);
    libvlc_event_manager_t *dynamic_libvlc_media_player_event_manager(libvlc_media_player_t *p_mi);
    float dynamic_libvlc_audio_equalizer_get_band_frequency(unsigned u_index);
    char *dynamic_libvlc_media_get_mrl(libvlc_media_t *p_md);
    int dynamic_libvlc_video_get_marquee_int(libvlc_media_player_t *p_mi, unsigned option);
    void dynamic_libvlc_track_description_list_release(libvlc_track_description_t *p_track_description);
    libvlc_media_track_t *dynamic_libvlc_media_tracklist_at(libvlc_media_tracklist_t *list, size_t index);
    void dynamic_libvlc_clearerr(void);
    void dynamic_libvlc_audio_output_list_release(libvlc_audio_output_t *p_list);
    unsigned dynamic_libvlc_picture_get_stride(libvlc_picture_t *pic);
    void dynamic_libvlc_release(libvlc_instance_t *p_instance);
    libvlc_media_thumbnail_request_t *dynamic_libvlc_media_thumbnail_request_by_time(libvlc_media_t *md, libvlc_time_t time, libvlc_thumbnailer_seek_speed_t speed, unsigned width, unsigned height, bool crop, libvlc_picture_type_t picture_type, libvlc_time_t timeout);
    libvlc_track_description_t *dynamic_libvlc_video_get_track_description(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_media_list_insert_media(libvlc_media_list_t *p_ml, libvlc_media_t *p_md, int i_pos);
    void dynamic_libvlc_dialog_set_context(libvlc_dialog_id *p_id, void *p_context);
    void dynamic_libvlc_log_set(libvlc_instance_t *p_instance, libvlc_log_cb cb, void *data);
    void dynamic_libvlc_video_set_format(libvlc_media_player_t *mp, char *chroma, unsigned width, unsigned height, unsigned pitch);
    int dynamic_libvlc_add_intf(libvlc_instance_t *p_instance, char *name);
    libvlc_media_t *dynamic_libvlc_media_new_callbacks(libvlc_instance_t *instance, libvlc_media_open_cb open_cb, libvlc_media_read_cb read_cb, libvlc_media_seek_cb seek_cb, libvlc_media_close_cb close_cb, void *opaque);
    void dynamic_libvlc_media_list_unlock(libvlc_media_list_t *p_ml);
    int dynamic_libvlc_media_player_get_full_chapter_descriptions(libvlc_media_player_t *p_mi, int i_chapters_of_title, libvlc_chapter_description_t ***pp_chapters);
    int dynamic_libvlc_audio_get_mute(libvlc_media_player_t *p_mi);
    char *dynamic_libvlc_printerr(char *fmt);
    libvlc_media_player_t *dynamic_libvlc_media_player_new(libvlc_instance_t *p_libvlc_instance);
    void dynamic_libvlc_media_player_set_video_title_display(libvlc_media_player_t *p_mi, libvlc_position_t position, unsigned timeout);
    char *dynamic_libvlc_media_get_codec_description(libvlc_track_type_t i_type, long i_codec);
    int dynamic_libvlc_media_player_set_rate(libvlc_media_player_t *p_mi, float rate);
    void dynamic_libvlc_video_set_deinterlace(libvlc_media_player_t *p_mi, int deinterlace, char *psz_mode);
    void dynamic_libvlc_media_player_pause(libvlc_media_player_t *p_mi);
    libvlc_audio_output_t *dynamic_libvlc_audio_output_list_get(libvlc_instance_t *p_instance);
    libvlc_state_t dynamic_libvlc_media_get_state(libvlc_media_t *p_md);
    void dynamic_libvlc_audio_set_format_callbacks(libvlc_media_player_t *mp, libvlc_audio_setup_cb setup, libvlc_audio_cleanup_cb cleanup);
    libvlc_media_discoverer_t *dynamic_libvlc_media_discoverer_new(libvlc_instance_t *p_inst, char *psz_name);
    libvlc_event_manager_t *dynamic_libvlc_renderer_discoverer_event_manager(libvlc_renderer_discoverer_t *p_rd);
    void dynamic_libvlc_media_slaves_release(libvlc_media_slave_t **pp_slaves, unsigned i_count);
    libvlc_media_t *dynamic_libvlc_media_new_location(libvlc_instance_t *p_instance, char *psz_mrl);
    void dynamic_libvlc_media_list_set_media(libvlc_media_list_t *p_ml, libvlc_media_t *p_md);
    libvlc_media_t *dynamic_libvlc_media_list_media(libvlc_media_list_t *p_ml);
    unsigned dynamic_libvlc_media_tracks_get(libvlc_media_t *p_md, libvlc_media_track_t ***tracks);
    void dynamic_libvlc_media_parse_async(libvlc_media_t *p_md);
    void dynamic_libvlc_event_detach(libvlc_event_manager_t *p_event_manager, libvlc_event_type_t i_event_type, libvlc_callback_t f_callback, void *p_user_data);
    int dynamic_libvlc_video_get_size(libvlc_media_player_t *p_mi, unsigned num, unsigned *px, unsigned *py);
    bool dynamic_libvlc_media_discoverer_is_running(libvlc_media_discoverer_t *p_mdis);
    void dynamic_libvlc_renderer_item_release(libvlc_renderer_item_t *p_item);
    libvlc_player_program_t *dynamic_libvlc_player_programlist_at(libvlc_player_programlist_t *list, size_t index);
    int dynamic_libvlc_dialog_dismiss(libvlc_dialog_id *p_id);
    int64_t dynamic_libvlc_delay(int64_t pts);
    libvlc_picture_t *dynamic_libvlc_picture_list_at(libvlc_picture_list_t *list, size_t index);
    void dynamic_libvlc_media_retain(libvlc_media_t *p_md);
    int dynamic_libvlc_media_player_get_title(libvlc_media_player_t *p_mi);
    char *dynamic_libvlc_media_get_meta(libvlc_media_t *p_md, libvlc_meta_t e_meta);
    int dynamic_libvlc_media_list_player_next(libvlc_media_list_player_t *p_mlp);
    libvlc_media_t *dynamic_libvlc_media_new_as_node(libvlc_instance_t *p_instance, char *psz_name);
    void dynamic_libvlc_media_list_player_release(libvlc_media_list_player_t *p_mlp);
    void dynamic_libvlc_media_list_player_play(libvlc_media_list_player_t *p_mlp);
    void dynamic_libvlc_media_player_next_frame(libvlc_media_player_t *p_mi);
    unsigned dynamic_libvlc_picture_get_width(libvlc_picture_t *pic);
    libvlc_media_thumbnail_request_t *dynamic_libvlc_media_thumbnail_request_by_pos(libvlc_media_t *md, float pos, libvlc_thumbnailer_seek_speed_t speed, unsigned width, unsigned height, bool crop, libvlc_picture_type_t picture_type, libvlc_time_t timeout);
    libvlc_player_program_t *dynamic_libvlc_media_player_get_selected_program(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_media_list_player_previous(libvlc_media_list_player_t *p_mlp);
    void dynamic_libvlc_media_player_set_nsobject(libvlc_media_player_t *p_mi, void *drawable);
    int dynamic_libvlc_media_save_meta(libvlc_media_t *p_md);
    libvlc_media_player_t *dynamic_libvlc_media_player_new_from_media(libvlc_media_t *p_md);
    int dynamic_libvlc_media_player_get_chapter_count(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_player_next_chapter(libvlc_media_player_t *p_mi);
    libvlc_track_description_t *dynamic_libvlc_audio_get_track_description(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_list_player_set_pause(libvlc_media_list_player_t *p_mlp, int do_pause);
    void dynamic_libvlc_dialog_set_callbacks(libvlc_instance_t *p_instance, libvlc_dialog_cbs *p_cbs, void *p_data);
    void dynamic_libvlc_media_player_set_media(libvlc_media_player_t *p_mi, libvlc_media_t *p_md);
    void *dynamic_libvlc_dialog_get_context(libvlc_dialog_id *p_id);
    char *dynamic_libvlc_get_version(void);
    int dynamic_libvlc_media_slaves_add(libvlc_media_t *p_md, libvlc_media_slave_type_t i_type, unsigned i_priority, char *psz_uri);
    char *dynamic_libvlc_errmsg(void);
    int dynamic_libvlc_audio_get_volume(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_renderer_discoverer_list_release(libvlc_rd_description_t **pp_services, size_t i_count);
    libvlc_media_t *dynamic_libvlc_media_player_get_media(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_player_set_android_context(libvlc_media_player_t *p_mi, void *p_awindow_handler);
    void dynamic_libvlc_media_player_set_chapter(libvlc_media_player_t *p_mi, int i_chapter);
    int dynamic_libvlc_media_list_remove_index(libvlc_media_list_t *p_ml, int i_pos);
    libvlc_player_program_t *dynamic_libvlc_media_player_get_program_from_id(libvlc_media_player_t *p_mi, int i_group_id);
    unsigned dynamic_libvlc_picture_get_height(libvlc_picture_t *pic);
    void dynamic_libvlc_video_set_crop_border(libvlc_media_player_t *mp, unsigned left, unsigned right, unsigned top, unsigned bottom);
    int dynamic_libvlc_media_parse_with_options(libvlc_media_t *p_md, libvlc_media_parse_flag_t parse_flag, int timeout);
    void dynamic_libvlc_media_player_retain(libvlc_media_player_t *p_mi);
    int dynamic_libvlc_video_get_track_count(libvlc_media_player_t *p_mi);
    libvlc_media_type_t dynamic_libvlc_media_get_type(libvlc_media_t *p_md);
    libvlc_audio_output_device_t *dynamic_libvlc_audio_output_device_enum(libvlc_media_player_t *mp);
    void dynamic_libvlc_video_set_marquee_string(libvlc_media_player_t *p_mi, unsigned option, char *psz_text);
    void dynamic_libvlc_audio_output_device_set(libvlc_media_player_t *mp, char *module, char *device_id);
    int dynamic_libvlc_picture_save(libvlc_picture_t *pic, char *path);
    void dynamic_libvlc_set_app_id(libvlc_instance_t *p_instance, char *id, char *version, char *icon);
    int dynamic_libvlc_renderer_item_flags(libvlc_renderer_item_t *p_item);
    libvlc_renderer_discoverer_t *dynamic_libvlc_renderer_discoverer_new(libvlc_instance_t *p_inst, char *psz_name);
    void dynamic_libvlc_picture_retain(libvlc_picture_t *pic);
    libvlc_renderer_item_t *dynamic_libvlc_renderer_item_hold(libvlc_renderer_item_t *p_item);
    int dynamic_libvlc_video_get_logo_int(libvlc_media_player_t *p_mi, unsigned option);
    void dynamic_libvlc_video_set_format_callbacks(libvlc_media_player_t *mp, libvlc_video_format_cb setup, libvlc_video_cleanup_cb cleanup);
    void dynamic_libvlc_media_player_previous_chapter(libvlc_media_player_t *p_mi);
    bool dynamic_libvlc_get_fullscreen(libvlc_media_player_t *p_mi);
    libvlc_time_t dynamic_libvlc_picture_get_time(libvlc_picture_t *pic);
    int dynamic_libvlc_media_player_play(libvlc_media_player_t *p_mi);
    void dynamic_libvlc_media_discoverer_release(libvlc_media_discoverer_t *p_mdis);
    int dynamic_libvlc_audio_set_delay(libvlc_media_player_t *p_mi, int64_t i_delay);
    void dynamic_libvlc_media_thumbnail_request_cancel(libvlc_media_thumbnail_request_t *p_req);
    struct libvlc_media_list_t *dynamic_libvlc_media_subitems(libvlc_media_t *p_md);
    libvlc_time_t dynamic_libvlc_media_player_get_time(libvlc_media_player_t *p_mi);
    unsigned dynamic_libvlc_media_slaves_get(libvlc_media_t *p_md, libvlc_media_slave_t ***ppp_slaves);
    libvlc_media_list_player_t *dynamic_libvlc_media_list_player_new(libvlc_instance_t *p_instance);
    void dynamic_libvlc_media_list_player_set_media_player(libvlc_media_list_player_t *p_mlp, libvlc_media_player_t *p_mi);
    char *dynamic_libvlc_get_changeset(void);
    unsigned char *dynamic_libvlc_picture_get_buffer(libvlc_picture_t *pic, size_t *size);
    void dynamic_libvlc_renderer_discoverer_release(libvlc_renderer_discoverer_t *p_rd);

    bool dynamic_load(const char *path);
#ifdef __cplusplus
}
#endif

#endif /* DYNAMIC_H */
